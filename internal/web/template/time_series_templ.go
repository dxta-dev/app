// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.747
package template

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func setData(yValues []string, startEndWeek []StartEndWeek, valueName string) templ.ComponentScript {
	return templ.ComponentScript{
		Name: `__templ_setData_62df`,
		Function: `function __templ_setData_62df(yValues, startEndWeek, valueName){const parent = document.currentScript.parentNode;
	const svg = parent.querySelector(` + "`" + `svg` + "`" + `);
	const circles = parent.querySelectorAll(` + "`" + `svg > circle` + "`" + `);

	circles.forEach((c, i) => {
		c.setAttribute(` + "`" + `data-y-value` + "`" + `, yValues[i]);
		c.setAttribute(` + "`" + `start-day` + "`" + `, startEndWeek[i].Start);
		c.setAttribute(` + "`" + `end-day` + "`" + `, startEndWeek[i].End);
		c.setAttribute(` + "`" + `data-value-name` + "`" + `, valueName);
	});
}`,
		Call:       templ.SafeScript(`__templ_setData_62df`, yValues, startEndWeek, valueName),
		CallInline: templ.SafeScriptInline(`__templ_setData_62df`, yValues, startEndWeek, valueName),
	}
}

type TimeSeriesProps struct {
	Series           TimeSeries
	StartEndWeeks    []StartEndWeek
	FormattedYValues []string
	InfoText         string
}

func timeSeries(props TimeSeriesProps, valueName string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div><p>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var2 string
		templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(props.InfoText)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/template/time_series.templ`, Line: 25, Col: 21}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</p><div class=\"relative\" data-svg-container>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = TimeSeriesChart(props.Series).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"absolute\" data-svg-overlay></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = setData(props.FormattedYValues, props.StartEndWeeks, valueName).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}
