package templates

import (
	"time"
	"dxta-dev/app/internal/data"
	"fmt"


)

type SwarmProps struct {
	Series         SwarmSeries
	StartOfTheWeek time.Time
	EventIds	[]int64
}


script getChart(chartId string, endpoint string, circleIds []int64) {

	if (circleIds === null) {
		return;
	}

	const svg = document.querySelector(`${chartId} > svg`);
    const circles = document.querySelectorAll(`${chartId} > svg > circle`);

	for (let i = 0; i < circles.length; i++) {
		circles[i].setAttribute("data-id", circleIds[i]);
	}

    function moveToTop(element) {
        element.parentNode.appendChild(element);
    }

	function getCircleInfo(circleId) {
		console.log(circleId);
	}

	const redCircle = document.createElementNS("http://www.w3.org/2000/svg", "circle");

	redCircle.setAttribute("fill", "white");
	redCircle.setAttribute("stroke", "red");
	redCircle.setAttribute("stroke-width", "1");
	redCircle.setAttribute("r", +circles[0].getAttribute("r") + 3);

	circles.forEach((circle, i) => {
		circle.addEventListener("click", (e) => {
			redCircle.setAttribute("cx", circle.getAttribute("cx"));
			redCircle.setAttribute("cy", circle.getAttribute("cy"));
			if(!redCircle.parentNode) {
				svg.appendChild(redCircle);
			}
			moveToTop(redCircle);
			moveToTop(circle);
			getCircleInfo(Number(circle.getAttribute("data-id")));

		})
	});


}



templ circleInfo(eventInfo data.Event) {
        <div id="circle-info-container">
                <pre>{ fmt.Sprintf("%v", eventInfo) }</pre>
        </div>
}


templ swarm(props SwarmProps) {
		<div class="flex items-center justify-center" id="swarm-chart">
			<style text="text/css">
				svg > circle:hover {
					cursor: pointer;
				}
			</style>
			@swarmChartComponent(props.Series, props.StartOfTheWeek)
			@getChart("#swarm-chart", "", props.EventIds)
		</div>
}
