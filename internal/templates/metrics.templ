package templates

import (
	"dxta-dev/app/internal/data"
	"strconv"
	"fmt"
)

type MetricsProps struct {
	Weeks                 []string
	AverageMrSizeMap      map[string]data.AverageMRSizeByWeek
	AverageReviewDepthMap map[string]data.AverageMrReviewDepthByWeek
	MrCountMap            map[string]data.MrCountByWeek
	TotalCommitsMap       map[string]data.CommitCountByWeek
	TotalPRsOpenedMap     map[string]data.PRCountByWeek
}

templ Metrics(page *Page, props MetricsProps) {
	@Layout(page) {
		<div class="overflow-x-auto font-mono">
		<table class="min-w-full table-auto">
			<thead class="bg-gray-200">
				<tr>
					<th class="px-4 py-2">Week</th>
					<th class="px-4 py-2">Average MR Size</th>
					<th class="px-4 py-2">MR Count</th>
					<th class="px-4 py-2">Average Review Depth</th>
					<th class="px-4 py-2">MR Count</th>
					<th class="px-4 py-2">Commit Count</th>
					<th class="px-4 py-2">PR Count</th>
				</tr>
			</thead>
			<tbody>
				for i, week := range props.Weeks {
					<tr
						if i % 2 == 0 {
							class="bg-gray-100"
						}
					>
						<td class="border px-4 py-2">{ week }</td>
						<td class="border px-4 py-2 text-right">{ strconv.Itoa(props.AverageMrSizeMap[week].Size) }</td>
						<td class="border px-4 py-2 text-right">{ strconv.Itoa(props.AverageMrSizeMap[week].N) }</td>
						<td class="border px-4 py-2 text-right">{ fmt.Sprintf("%.2f", props.AverageReviewDepthMap[week].Depth) }</td>
						<td class="border px-4 py-2 text-right">{ strconv.Itoa(props.MrCountMap[week].Count) }</td>
						<td class="border px-4 py-2 text-right">{ strconv.Itoa(props.TotalCommitsMap[week].Count) }</td>
						<td class="border px-4 py-2 text-right">{ strconv.Itoa(props.TotalPRsOpenedMap[week].Count) }</td>
					</tr>
				}
			</tbody>
		</table>
		</div>
	}
}
