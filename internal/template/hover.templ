package template

script tooltip() {
    const svgs = document.querySelectorAll('svg');

    svgs.forEach(svg => {

		const svgWidth = Number(svg.getAttribute('width'));
		const svgHeight = Number(svg.getAttribute('height'));

        const circles = svg.querySelectorAll('circle');

		const rectWidth = svgWidth / circles.length;
		const rectHeight = rectWidth;

        circles.forEach(c => {
            const circleX = c.getAttribute('cx');
            const circleY = c.getAttribute('cy');


            const rect = document.createElementNS("http://www.w3.org/2000/svg", "rect");
            rect.setAttribute('width', rectWidth);
            rect.setAttribute('height', rectHeight);
            rect.setAttribute('fill', 'red');
            rect.setAttribute('x', circleX - rectWidth / 2);
            rect.setAttribute('y', circleY - rectHeight / 2);
            rect.style.opacity = '1';

			rect.style.cursor = 'cursor';

            svg.appendChild(rect);

			rect.addEventListener('mouseenter', function(event) {

				const dataYValue = parseFloat(c.getAttribute('data-y-value'));
				const formattedYValue = dataYValue;
				const valueName = c.getAttribute('data-value-name');
				const startWeek = new Date(c.getAttribute('start-week'));
				const endWeek = new Date(c.getAttribute('end-week'));


				const tooltipY = circleY - rectHeight / 2;
				const tooltipX = circleX - rectWidth / 2;

				const tooltipGroup = document.createElementNS("http://www.w3.org/2000/svg", "g");

				const content = document.createElementNS("http://www.w3.org/2000/svg", "text");
				content.style.userSelect = 'none';

				const valueLine = document.createElementNS("http://www.w3.org/2000/svg", "tspan");
				valueLine.textContent = valueName + ': ' + formattedYValue;

				const dateLine = document.createElementNS("http://www.w3.org/2000/svg", "tspan");
				dateLine.textContent = startWeek.getTime() + ' - ' + endWeek.getTime();

				content.appendChild(valueLine);
				content.appendChild(dateLine);
				tooltipGroup.appendChild(content);
				svg.appendChild(tooltipGroup);

				console.log(svgWidth - content.getBBox().width, tooltipX);

				tooltipGroup.setAttribute('x', tooltipX);
				tooltipGroup.setAttribute('y', tooltipY);

				content.setAttribute('x', tooltipX);
				content.setAttribute('y', tooltipY);

				valueLine.setAttribute('x', tooltipX);
				valueLine.setAttribute('dy', '1.2em');

				dateLine.setAttribute('dy', '1.2em');
				dateLine.setAttribute('x', tooltipX);

				rect.addEventListener('mouseleave', function() {
					tooltipGroup.remove();
				});
			});
        });
    });
}
