package template

script tooltip() {
    const svgs = document.querySelectorAll('svg');

    svgs.forEach(svg => {

		const svgWidth = Number(svg.getAttribute('width'));
		const svgHeight = Number(svg.getAttribute('height'));

        const circles = svg.querySelectorAll('circle');

		const rectWidth = svgWidth / circles.length;
		const rectHeight = rectWidth;

        circles.forEach(c => {
            const circleX = c.getAttribute('cx');
            const circleY = c.getAttribute('cy');

			const rectGroup = document.createElementNS("http://www.w3.org/2000/svg", "g");


            const rect = document.createElementNS("http://www.w3.org/2000/svg", "rect");
            rect.setAttribute('width', rectWidth);
            //rect.setAttribute('height', rectHeight);
			rect.setAttribute('height', svgHeight-20);
            rect.setAttribute('fill', 'red');
            rect.setAttribute('x', circleX - rectWidth / 2);
            //rect.setAttribute('y', circleY - rectHeight / 2);
			rect.setAttribute('y', 20);
            rect.style.opacity = '0';

			rect.style.cursor = 'cursor';

            rectGroup.appendChild(rect);
			svg.appendChild(rectGroup);

			let tooltipGroup;

			rectGroup.addEventListener('mouseleave', function(event) {
				tooltipGroup.remove();
			});

			rectGroup.addEventListener('mouseenter', function(event) {

				const dataYValue = parseFloat(c.getAttribute('data-y-value'));
				const formattedYValue = dataYValue;
				const valueName = c.getAttribute('data-value-name');
				const startDay = c.getAttribute('start-day');
				const endDay = c.getAttribute('end-day');

				let tooltipY = circleY - rectHeight / 2;
				let tooltipX = circleX - rectWidth / 2;

				tooltipGroup = document.createElementNS("http://www.w3.org/2000/svg", "g");

				const content = document.createElementNS("http://www.w3.org/2000/svg", "text");
				content.style.userSelect = 'none';

				const valueLine = document.createElementNS("http://www.w3.org/2000/svg", "tspan");
				valueLine.textContent = valueName + ': ' + formattedYValue;

				const dateLine = document.createElementNS("http://www.w3.org/2000/svg", "tspan");
				dateLine.textContent = startDay + ' - ' + endDay;

				content.appendChild(valueLine);
				content.appendChild(dateLine);
				tooltipGroup.appendChild(content);
				rectGroup.appendChild(tooltipGroup);

				const contentWidth = Math.max(valueLine.getBBox().width, dateLine.getBBox().width);

				const contentHeight = valueLine.getBBox().height + dateLine.getBBox().height;

				tooltipX = svgWidth - contentWidth < tooltipX ? svgWidth - contentWidth : tooltipX;

				tooltipX = tooltipX < 0 ? 0 : tooltipX;

				tooltipY = contentHeight > tooltipY ? contentHeight : tooltipY;


				tooltipGroup.setAttribute('x', tooltipX);
				tooltipGroup.setAttribute('y', tooltipY);

				content.setAttribute('x', tooltipX);
				content.setAttribute('y', tooltipY);

				valueLine.setAttribute('x', tooltipX);
				valueLine.setAttribute('dy', '1.2em');

				dateLine.setAttribute('dy', '1.2em');
				dateLine.setAttribute('x', tooltipX);

				const backgroundRect = document.createElementNS("http://www.w3.org/2000/svg", "rect");
				backgroundRect.setAttribute('width', contentWidth);
				backgroundRect.setAttribute('height', contentHeight);
				backgroundRect.setAttribute('fill', 'white');

				backgroundRect.setAttribute('x', tooltipX);
				backgroundRect.setAttribute('y', tooltipY);

				tooltipGroup.insertBefore(backgroundRect, content);

			});
        });
    });
}
