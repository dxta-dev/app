package template

import (
	"fmt"
)

func GetDefaultNavState() NavState {
	return NavState{
		Root: "/",
		Metrics: struct {
			Quality    string
			Throughput string
		}{
			Quality:    "/metrics/quality",
			Throughput: "/metrics/throughput",
		},
	}
}

type NavState struct {
	Root    string
	Metrics struct {
		Quality    string
		Throughput string
	}
}

type Page struct {
	Title     string
	Boosted   bool
	Requested bool
	CacheBust string
	DebugMode bool
	NavState  NavState
	Nonce     string
}

templ Layout(page *Page) {
	<html>
		@Head(page.Title, page.CacheBust, page.Nonce)
		<body>
			@NewNavigation(page.NavState, page.DebugMode) {
				@Content(page) {
					{ children... }
				}
			}
		</body>
	</html>
}

templ Head(title string, bust string, nonce string) {
	<head>
		<meta charset="UTF-8"/>
		<title>{ title }</title>
		<script nonce={ nonce } src="https://unpkg.com/htmx.org@1.9.9/dist/htmx.min.js"></script>
		<script nonce={ nonce } src="https://unpkg.com/htmx.org@1.9.9/dist/ext/head-support.js"></script>
		<link href={ fmt.Sprintf("/style.css?t=%s", bust) } rel="stylesheet"/>
	</head>
}

templ Content(page *Page) {
	if page.Boosted {
		{ children... }
	} else {
		<main class="max-w-[1440px] mx-auto">
			{ children... }
		</main>
	}
}

templ NewNavigation(navigation NavState, debug bool) {
	<div>
		<!-- Static sidebar for desktop -->
		<div class="hidden lg:fixed lg:inset-y-0 lg:left-0 lg:z-50 lg:block lg:w-20 lg:overflow-y-auto lg:bg-gray-900 lg:pb-4">
			<div class="flex h-16 shrink-0 items-center justify-center">
				<!-- logo goes here -->
			</div>
			<nav
				hx-boost="true"
				hx-target="main"
				hx-swap="innerHTML show:unset"
				class="mt-8"
			>
				<ul role="list" class="flex flex-col items-center space-y-1">
					<li>
						<!-- Current: "bg-gray-800 text-white", Default: "text-gray-400 hover:text-white hover:bg-gray-800" -->
						<a
							href={ templ.SafeURL(navigation.Root) }
							class="bg-gray-800 text-white group flex gap-x-3 rounded-md p-3 text-sm leading-6 font-semibold"
						>
							D
							<span class="sr-only">Dashboard</span>
						</a>
					</li>
					<li>
						<a
							href={ templ.SafeURL(navigation.Metrics.Quality) }
							class="text-gray-400 hover:text-white hover:bg-gray-800 group flex gap-x-3 rounded-md p-3 text-sm leading-6 font-semibold"
						>
							Q
							<span class="sr-only">Quality Metrics</span>
						</a>
					</li>
					<li>
						<a
							href={ templ.SafeURL(navigation.Metrics.Throughput) }
							class="text-gray-400 hover:text-white hover:bg-gray-800 group flex gap-x-3 rounded-md p-3 text-sm leading-6 font-semibold"
						>
							T
							<span class="sr-only">Throughput Metrics</span>
						</a>
					</li>
				</ul>
			</nav>
		</div>
		<main>
			<div>
				<div class="px-4 py-10 sm:px-6 lg:px-8 lg:py-6">
					{ children... }
				</div>
			</div>
		</main>
	</div>
}

templ Navigation(navigation NavState, debug bool) {
	if debug {
		<div class="rounded-md bg-yellow-50 p-4">
			<div class="flex justify-center items-center">
				<div class="flex-shrink-0">
					<svg class="h-5 w-5 text-yellow-400" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
						<path
							fill-rule="evenodd"
							d="M8.485 2.495c.673-1.167 2.357-1.167 3.03 0l6.28 10.875c.673 1.167-.17 2.625-1.516 2.625H3.72c-1.347 0-2.189-1.458-1.515-2.625L8.485 2.495zM10 5a.75.75 0 01.75.75v3.5a.75.75 0 01-1.5 0v-3.5A.75.75 0 0110 5zm0 9a1 1 0 100-2 1 1 0 000 2z"
							clip-rule="evenodd"
						></path>
					</svg>
				</div>
				<div class="ml-3">
					<h3 class="text-sm font-medium text-yellow-800">YOU ARE IN DEBUG MODE</h3>
				</div>
			</div>
		</div>
	}
	<div hx-boost="true" hx-target="main" hx-swap="innerHTML show:unset" class="w-full mx-auto">
		<div
			class="relative flex flex-col w-full p-5 mx-auto md:items-center md:justify-between md:flex-row max-w-7xl lg:px-16 md:px-12 px-8 xl:px-24"
		>
			<div class="flex flex-row items-center justify-between lg:justify-start">
				<a href={ templ.SafeURL(navigation.Root) } class="text-xl text-gray-900 font-semibold tracking-tighter inline-flex gap-2 items-center">
					DXTA
				</a>
			</div>
			<nav class="flex-col flex-grow py-12 lg:py-0 md:flex md:justify-end md:flex-row hidden">
				<ul class="space-y-2 list-none lg:space-y-0 lg:items-center lg:inline-flex">
					<li>
						<a
							href={ templ.SafeURL(navigation.Root) }
							class="px-2 lg:px-6 py-4 md:px-3 text-sm font-semibold text-slate-600 hover:text-purple-900"
						>
							Dashboard
						</a>
					</li>
					<li>
						<a
							href={ templ.SafeURL(navigation.Metrics.Quality) }
							class="px-2 lg:px-6 py-4 md:px-3 text-sm font-semibold text-slate-600 hover:text-purple-900"
						>
							Quality Metrics
						</a>
					</li>
					<li>
						<a
							href={ templ.SafeURL(navigation.Metrics.Throughput) }
							class="px-2 lg:px-6 py-4 md:px-3 text-sm font-semibold text-slate-600 hover:text-purple-900"
						>
							Throughput Metrics
						</a>
					</li>
				</ul>
			</nav>
		</div>
	</div>
}
