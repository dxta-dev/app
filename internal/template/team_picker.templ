package template

type Team struct {
	Id   int64
	Name string
	Url  string
}

type TeamPickerProps struct {
	Teams        []Team
	SelectedTeam *int64
	NoTeamUrl    string
}

func getSelectedTeam(props TeamPickerProps) *Team {
	if props.SelectedTeam == nil {
		return &Team{
			Id:   -1,
			Name: "All teams",
			Url:  props.NoTeamUrl,
		}
	}

	for _, team := range props.Teams {
		if team.Id == *props.SelectedTeam {
			return &team
		}
	}

	return &Team{
		Id:   -1,
		Name: "All teams",
		Url:  props.NoTeamUrl,
	}

}

templ TeamPickerStuff(props TeamPickerProps) {
	<div class="lg:pl-20 sticky top-0 z-10">
		<div class="sticky top-0 right-0 z-40 flex justify-end h-16 shrink-0 items-center gap-x-4 border-b border-gray-200 bg-white px-4 shadow-sm sm:gap-x-6 sm:px-6 lg:px-8">
			<div class="relative">
				<button type="button" popovertarget="team-picker-popover" class="-m-1.5 flex items-center p-1.5" id="user-menu-button" aria-expanded="false" aria-haspopup="true">
					<span class="sr-only">Open user menu</span>
					<span class="hidden lg:flex lg:items-center">
						<span class="px-2 text-sm font-semibold leading-6 text-gray-900" aria-hidden="true">{ getSelectedTeam(props).Name }</span>
						@Chevron(Down)
					</span>
				</button>
				@teamPickerPopover(props)
			</div>
		</div>
	</div>
}

templ teamPickerPopoverItem(team Team, selected bool) {
	<li class="text-gray-900 cursor-default select-none p-4 text-sm" id="listbox-option-0" role="option">
		<a href={ templ.SafeURL(team.Url) }>
			<div class="flex flex-col">
				<div class="flex justify-between">
					<p class="font-normal">{ team.Name }</p>
					if selected {
						<span class="text-indigo-600">
							@Checkmark()
						</span>
					}
				</div>
			</div>
		</a>
	</li>
}

templ teamPickerPopover(props TeamPickerProps) {
	<div id="team-picker-popover" popover class="fixed right-0 z-10 mt-16 mr-8 origin-top-right rounded-md bg-white py-2 shadow-lg ring-1 ring-gray-900/5 focus:outline-none" role="menu" aria-orientation="vertical" aria-labelledby="user-menu-button" tabindex="-1">
		<ul class="w-72 divide-y divide-gray-200 overflow-hidden focus:outline-none" tabindex="-1" role="listbox" aria-labelledby="listbox-label" aria-activedescendant="listbox-option-0">
			<li class="text-gray-900 cursor-default select-none p-4 text-sm" id="listbox-option-0" role="option">
				<a href={ templ.SafeURL(props.NoTeamUrl) }>
					<div class="flex flex-col">
						<div class="flex justify-between">
							<p class="font-normal">All teams</p>
							if props.SelectedTeam == nil {
								<span class="text-indigo-600">
									@Checkmark()
								</span>
							}
						</div>
						<p class="text-gray-500 mt-2">Displaying metrics from all teams combined.</p>
					</div>
				</a>
			</li>
			for _, team := range props.Teams {
				@teamPickerPopoverItem(team, props.SelectedTeam != nil && team.Id == *props.SelectedTeam)
			}
		</ul>
	</div>
}

templ teamPicker(props TeamPickerProps) {
	@TeamPickerStuff(props)
}
