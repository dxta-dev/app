name: CI

on: [push]

env:
  TEST_TAG: user/app:test

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: 1.0.15

      - name: Setup go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21.5

      - name: Setup bun cache
        uses: actions/cache@v3
        id: bun-cache
        with:
          path: |
            ./node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('./bun.lockb') }}

      - name: bun install
        if: steps.bun-cache.outputs.cache-hit != 'true'
        run: |
          bun i

      - name: Setup generate cache
        uses: actions/cache@v3
        id: generate-cache
        with:
          path: |
            ./public/style.css
            ./internals/templates/**/*_templ.go
          key: ${{ runner.os }}-generate-${{ hashFiles('./internals/templates/**/*.templ') }}

      - name: Generate
        if: steps.generate-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p bin/
          go install github.com/a-h/templ/cmd/templ@latest
          templ generate
          ./node_modules/.bin/tailwindcss -i ./style.css -o ./public/style.css

  test:
    needs: [setup]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21.5

      - name: Restore generate cache
        uses: actions/cache/restore@v3
        with:
          path: |
            ./public/style.css
            ./internals/templates/**/*_templ.go
          key: ${{ runner.os }}-generate-${{ hashFiles('./internals/templates/**/*.templ') }}

      - name: Test
        run: |
          go test -v ./...

  bench:
    needs: [setup]
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Setup go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21.5

      - name: Restore generate cache
        uses: actions/cache/restore@v3
        with:
          path: |
            ./public/style.css
            ./internals/templates/**/*_templ.go
          key: ${{ runner.os }}-generate-${{ hashFiles('./internals/templates/**/*.templ') }}

      - name: Bench
        run: |
          go test -bench=. ./... > benchmark-new.txt

      - name: Checkout main branch
        if: github.ref != 'refs/heads/main'
        uses: actions/checkout@v4
        with:
          ref: 'main'

      - name: Bench main
        if: github.ref != 'refs/heads/main'
        run: go test -bench=. ./... > benchmark-main.txt

      - name: Install benchstat
        if: github.ref != 'refs/heads/main'
        run: go install golang.org/x/perf/cmd/benchstat@latest

      - name: Compare Benchmarks with benchstat
        if: github.ref != 'refs/heads/main'
        run: benchstat benchmark-main.txt benchmark-new.txt > bench-diff.txt

      - name: Upload Benchmark Comparison as Artifact
        if: github.ref != 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-comparison
          path: bench-diff.txt

  build:
    needs: [setup]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21.5

      - name: Restore generate cache
        uses: actions/cache/restore@v3
        with:
          path: |
            ./public/style.css
            ./internals/templates/**/*_templ.go
          key: ${{ runner.os }}-generate-${{ hashFiles('./internals/templates/**/*.templ') }}

      - name: Dry Build
        run: |
          go build -o ./tmp/main ./cmd/web/main.go

  docker:
    needs: [test, setup, build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Dry build
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          tags: ${{ env.TEST_TAG }}
