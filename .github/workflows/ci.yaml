name: CI

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: read
  pull-requests: write

env:
  TEST_TAG: user/app:test

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0
        with:
          egress-policy: audit

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go 1.24
        uses: actions/setup-go@v5
        with:
          go-version: 1.24

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

      - name: Download Go modules
        run: go mod download

      - name: Debug Go environment
        run: |
          echo "---- go env ----"
          go env
          echo "---- module list (filter chi) ----"
          go list -m all | grep go-chi/chi || echo "no chi in module list"
          echo "---- show chi directory in $GOPATH -----"
          ls -ld $GOPATH/pkg/mod/github.com/go-chi/chi@* || echo "chi not in cache"
          echo "---- go list api.go imports ----"
          go list -json ./internal/api/api.go | jq '.Imports'
          echo "---- go list chi/v5 info ----"
          go list -json github.com/go-chi/chi/v5

      - name: List cached chi directories
        run: |
          echo "Contents of go/pkg/mod/github.com/go-chi/chi@*:"
          ls -1 ~/go/pkg/mod/github.com/go-chi/chi@*

      - name: Run golangci-lint (module mode)
        env:
          GO111MODULE: "on"
        run: |
          echo "---- golangci-lint GOMOD check ----"
          go env GOMOD
          echo "---- golangci-lint run (with modules-download-mode=mod) ----"
          golangci-lint run \
            --timeout 10m \
            --config ./.golangci.yml \
            --modules-download-mode=mod \
            ./... \
            --verbose

      - name: Run deadcode
        run: deadcode ./...

      - name: Verify modules (optional)
        run: go mod verify

      - name: Run tests
        run: go test -v ./...

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0
        with:
          egress-policy: audit

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go 1.24
        uses: actions/setup-go@v5
        with:
          go-version: 1.24

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

      - name: Dry Build API
        run: go build -o ./tmp/api ./cmd/api/main.go

  docker:
    needs: [test, build]
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0
        with:
          egress-policy: audit

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./api.dockerfile
          load: true
          tags: ${{ env.TEST_TAG }}

