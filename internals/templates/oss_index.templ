package templates

templ Arrow() {
	<svg
 		xmlns="http://www.w3.org/2000/svg"
 		viewBox="0 0 20 20"
 		fill="currentColor"
 		class="w-4 h-4 ml-3 group-hover:translate-x-2 transition duration-500 ease-in-out transform"
	>
		<path
 			fill-rule="evenodd"
 			d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z"
 			clip-rule="evenodd"
		></path>
	</svg>
}

type Card struct {
	Logo               string
	LogoAlt            string
	Content            string
	BackgroundImage    string
	BackgroundImageAlt string
	URL                templ.SafeURL
}

type CardGroup struct {
	FirstNarrowCard  *Card
	SecondNarrowCard *Card
	WideCard         *Card
}

templ ACardGroup(cardGroup CardGroup) {
	<div class="flex flex-wrap w-1/2">
		if cardGroup.FirstNarrowCard != nil {
			@NarrowCard(*cardGroup.FirstNarrowCard)
		}
		if cardGroup.SecondNarrowCard != nil {
			@NarrowCard(*cardGroup.SecondNarrowCard)
		}
		if cardGroup.WideCard != nil {
			@WideCard(*cardGroup.WideCard)
		}
	</div>
}

templ BCardGroup(cardGroup CardGroup) {
	<div class="flex flex-wrap w-1/2">
		if cardGroup.WideCard != nil {
			@WideCard(*cardGroup.WideCard)
		}
		if cardGroup.FirstNarrowCard != nil {
			@NarrowCard(*cardGroup.FirstNarrowCard)
		}
		if cardGroup.SecondNarrowCard != nil {
			@NarrowCard(*cardGroup.SecondNarrowCard)
		}
	</div>
}

templ NarrowCard(card Card) {
	<div class="md:p-2 p-1 w-1/2">
		<div
 			class="relative overflow-hidden rounded-2xl bg-slate-500 p-8 shadow-xl lg:py-12 lg:gap-x-8"
		>
			<div
 				class="absolute inset-0 opacity-30 mix-blend-multiply saturate-0 filter"
			>
				<img
 					src={ card.BackgroundImage }
 					alt={ card.BackgroundImageAlt }
 					class="h-full w-full object-cover"
				/>
			</div>
			<div class="relative lg:col-span-1">
				<span>
					<img
 						src={ card.Logo }
 						alt={ card.LogoAlt }
					/>
				</span>
				<blockquote class="mt-6 text-white lg:mt-32">
					<p class="font-medium">
						{ card.Content }
					</p>
					<p class="mt-6">
						<a
 							href={ card.URL }
 							target="_blank"
 							class="text-white hover:text-blue-100 inline-flex items-center group"
						>
							Dashboard
							@Arrow()
						</a>
					</p>
				</blockquote>
			</div>
		</div>
	</div>
}

templ WideCard(card Card) {
	<div class="md:p-2 p-1 w-full">
		<div
 			class="relative overflow-hidden rounded-2xl bg-slate-500 p-8 shadow-xl lg:py-12 lg:gap-x-8"
		>
			<div
 				class="absolute inset-0 opacity-30 mix-blend-multiply saturate-0 filter"
			>
				<img
 					src={ card.BackgroundImage }
 					alt={ card.BackgroundImageAlt }
 					class="h-full w-full object-cover"
				/>
			</div>
			<div class="relative lg:col-span-1">
				<span>
					<img
 						src={ card.Logo }
 						alt={ card.LogoAlt }
					/>
				</span>
				<blockquote class="mt-6 text-white lg:mt-32">
					<p class="font-medium">
						{ card.Content }
					</p>
					<p class="mt-6">
						<a
 							href={ card.URL }
 							target="_blank"
 							class="text-white hover:text-blue-100 inline-flex items-center group"
						>
							Dashboard
							@Arrow()
						</a>
					</p>
				</blockquote>
			</div>
		</div>
	</div>
}

templ OSSIndex(cardGroups []CardGroup) {
	<html>
		<head>
			<title>oss</title>
			<link rel="stylesheet" href="style.css"/>
		</head>
		<body>
			<section class="bg-white">
				<div
 					class="mx-auto max-w-7xl lg:px-16 md:px-12 px-8 xl:px-24 py-24 items-center"
				>
					<div class="max-w-xl">
						<h2
 							class="text-purple-900 font-semibold tracking-tighter lg:text-5xl mt-6 text-3xl"
						>
							Something something Open Source
						</h2>
					</div>
					<div class="mx-auto mt-12">
						<div class="flex flex-wrap md:-m-2 -m-1">
							for index, cardGroup := range cardGroups {
								if index % 2 == 0 {
									@BCardGroup(cardGroup)
								} else {
									@ACardGroup(cardGroup)
								}
							}
						</div>
					</div>
				</div>
			</section>
		</body>
	</html>
}
